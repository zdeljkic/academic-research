#!/usr/bin/python

# This transforms takes a phrase and searches the library of congress (loc.gov) for book
# The desired number of books is passed in as a parameter.

# bugs:
#  - it seems like it occasionally gives 1 result less
#  - ponekad je na kraju rezultata " /" ili "."
#  - mozda treba unicode( ) na stringove prije ispisa

import requests
from bs4 import BeautifulSoup
from generic_transform import *

# load input phrase and parameters
e_type,e_values,params = get_from_args()

query = e_values["value"]
numResults = int(params["numResults"])

# both the query and the number of results are sent in the HTTP GET request
par = {"q": query, "fa": "original-format:book", "all": "true", "c": numResults}
req = requests.get("http://www.loc.gov/search/", params = par)

soup = BeautifulSoup(req.text)

for parent_tag in soup.find_all(class_ = "description"):
	# navigate to the title tag and get the string
	# the string ocasionally has trailing whitespace and punctuation (/,.), so remove that too
	title_tag = parent_tag.h2.a

	title_string = title_tag.text.strip()
	while not title_string[-1:].isalnum():
		title_string = title_string[:-1]

	# navigate to the authors tag and check if it exists
	# if it does, get the string, it's already in the correct format, otherwise leave it empty
	authors_tag = parent_tag.find(class_ = "contributor")

	if authors_tag is not None:
		authors_string = authors_tag.span.text
	else:
		authors_string = ""

	# navigate to the date tag and check if it exists
	# if it does, get the string, it's also in the correct format, otherwise leave it empty
	date_tag = parent_tag.find(class_ = "date")

	if date_tag is not None:
		date_string = date_tag.span.text
	else:
		date_string = ""

	# write the final result
	write_result("book", {"value": title_string, "authors": authors_string, "date": date_string})

